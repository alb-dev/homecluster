---

- name: Create the RKE2 config dir
  ansible.builtin.file:
    state: directory
    path: /etc/rancher/rke2
    owner: root
    group: root
    mode: 0755

- name: Copy RKE2 config
  ansible.builtin.template:
    src: "{{ rke2_config }}"
    dest: /etc/rancher/rke2/config.yaml
    owner: root
    group: root
    mode: 0644

- name: Copy Containerd Registry Configuration file
  ansible.builtin.template:
    src: "{{ rke2_custom_registry_path }}"
    dest: /etc/rancher/rke2/registries.yaml
    owner: root
    group: root
    mode: 0644
  when: rke2_custom_registry_mirrors.0.endpoint | length > 0

- name: Start RKE2 service on the rest of the nodes
  ansible.builtin.systemd:
    name: "rke2-{{ rke2_type }}.service"
    state: started
    enabled: true
  retries: 10
  delay: 3
  register: result
  until: result is not failed
  environment:
    RKE2_TOKEN: "{{ rke2_token }}"

- name: Mask other RKE2 service on the rest of the nodes
  ansible.builtin.systemd:
    name: "rke2-{{ item }}.service"
    enabled: false
    masked: true
  with_items:
    - "{{ ([ 'agent', 'server' ] | reject('match', rke2_type) | list) }}"

- name: Wait for remaining nodes to be ready
  ansible.builtin.shell: |
   set -o pipefail
   {{ rke2_data_path }}/bin/kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml get nodes | grep " Ready" | wc -l
  args:
    executable: /bin/bash
  changed_when: false
  register: all_ready_nodes
  until:
    - groups[rke2_cluster_group_name] | length == all_ready_nodes.stdout | int
  retries: 100
  delay: 15
  delegate_to: "{{ active_server | default(groups[rke2_servers_group_name].0) }}"
  run_once: true
