---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: jellyfin
  namespace: jellyfin
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: jellyfin
      version: 9.3.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
  values:
 #
# IMPORTANT NOTE
#
# This chart inherits from our common library chart. You can check the default values/options here:
# https://github.com/k8s-at-home/library-charts/tree/main/charts/stable/common/values.yaml
#

    image:
      # -- image repository
      repository: jellyfin/jellyfin
      # -- image tag
      tag: 10.7.7
      # -- image pull policy
      pullPolicy: IfNotPresent

    # -- environment variables. See [image docs](https://jellyfin.org/docs/general/administration/configuration.html) for more details.
    # @default -- See below
    env:
      # -- Set the container timezone
      TZ: UTC

    # -- Configures service settings for the chart.
    # @default -- See values.yaml
    service:
      main:
        ports:
          http:
            port: 8096

    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.tls.certresolver: leresolver
        hosts:
          - host: "jelly.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
        - hosts:
            - "jelly.${SECRET_DOMAIN}"

    # -- Configure persistence settings for the chart under this key.
    # @default -- See values.yaml
    persistence:
      transcode:
        enabled: true
        type: emptyDir
        medium: Memory
      config:
        enabled: true
        existingClaim: pvc-jellyfin-config
        mountPath: /config
      cache:
        enabled: true
        existingClaim: pvc-jellyfin-cache
        mountPath: /cache
      # Cache does NOT contain temporary transcoding data.
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: 192.168.178.35
            path: /volume1/General/Video
        mountPath: /media
        readOnly: false
    # -- Configure the Security Context for the Pod
    podSecurityContext: {}
    #   runAsUser: 568
    #   runAsGroup: 568
    #   fsGroup: 568
    #   # Hardware acceleration using an Intel iGPU w/ QuickSync
    #   # These IDs below should be matched to your `video` and `render` group on the host
    #   # To obtain those IDs run the following grep statement on the host:
    #   # $ cat /etc/group | grep "video\|render"
    #   # video:x:44:
    #   # render:x:109:
    #   supplementalGroups:
    #   - 44
    #   - 109

    # resources:
    #   requests:
    #     # Hardware acceleration using an Intel iGPU w/ QuickSync and
    #     # using intel-gpu-plugin (https://github.com/intel/intel-device-plugins-for-kubernetes)
    #     gpu.intel.com/i915: 1
    #     cpu: 200m
    #     memory: 256Mi
    #   limits:
    #     # Hardware acceleration using an Intel iGPU w/ QuickSync and
    #     # using intel-gpu-plugin (https://github.com/intel/intel-device-plugins-for-kubernetes)
    #     gpu.intel.com/i915: 1
    #     memory: 4096Mi
